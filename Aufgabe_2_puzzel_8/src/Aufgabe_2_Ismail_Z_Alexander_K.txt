A1:
a) Welche Parität hat der Zustand S in Abb. 1?
    Ausgang: 7, 2, 4, 5, 6, 8, 3, 1
    Falsche Zahlenpaare: (2, 7), (4, 7), (5, 7), (6, 7), (3, 7), (3, 4), (3, 5), (3, 6), (3, 8), (1, 7), (1, 2), (1, 4), (1, 5), (1, 6), (1, 8), (1, 3)
        => 16 Paare und damit ist die Parität gerade und lösbar
b) Implementieren Sie eine Funktion zur Berechnung der Parität eines Zustands.
    In Class Board parity() zu finden.


A2:
    Definition: Eine Heuristik h heisst
                monoton, falls
                h(n) ≤ c(n,n‘) + h(n‘).
                Dabei sind c(n,n‘) die Kosten um
                vom Knoten n zu n‘ zu kommen.

a) Für einen Zustand z ist h1(z) die Anzahl der falsch platzierten Steine in Bezug auf den
    Zielzustand. In Abb. 1 ist h1(S) = 8. Wieso ist h1 eine monotone Heuristik?

    -> Bei einer monotonen Heuristik sind die Were von f(n) entlang eines suchpfades monoton steigend.
        f(A) <= f(B) <= f(C) <= ... (f ist monoton)

b) Für einen Zustand z ist h2(z) die Summe der Manhattan-Distanzen der Steine von ihren
    Zielpositionen. In Abb. 1 ist h2(S) = 3 + 1 + 2 + 2 + 2 + 3 + 3 + 2 = 18. Wieso ist h2 eine
    monotone Heuristik?

    -> Bei einer monotonen Heuristik sind die Were von f(n) entlang eines suchpfades monoton steigend.
    f(A) <= f(B) <= f(C) <= ... (f ist monoton)

    Eine Heuristik h heisst zulässig, falls h(n) <= h*(n), dabei sind h*(n) die tatsächlichen Kosten vom Knoten n bis zum Ziel.
    - Eine zulässige Heuristik ist damit optimistisch. Beispiel Luftlinienabstand

c) Wieso ist h1(n) ≤ h2(n)? Welche Heuristik ist also besser?
    Durch die Zielgerichtete berechnung von den Zuständen lässt sich der Zielzustand besser eingrenzen.
    Je schärfer die Heuristik ist(d.h. je keiner h*(n) –h(n) ) desto zielgerichteter ist die Suche. Konzentrische Kreise werden schmäler.

d) Implementieren Sie beide Heuristiken.
    siehe Board.java

A 3:
a) Implementieren Sie Suchverfahren für das 8-Puzzle in zwei Varianten:
    Iterativ vertiefende Suche(iterative deepening depth-first searchIDS).
    A* mit einer der Heuristiken aus Aufgabe 2.Gerne dürfen Sie auch eine andere Heuristik einsetzen.
    Ausgangspunkt ist die in der Vorlesung besprochene uniforme Kostensuche auf S. 2-42, die um eine Heuristik erweitert wird.

    siehe A_star.java und IDFS,java

b) Testen  Sie  IhreSuchverfahrenfür  zufällig  generierte  Startzustände.  Beachten  Sie  dabei  die Paritätsüberlegung in Aufgabe 1.

    Fertig, parity() Abfrage der Boards wurde vor dem Lösen des Puzzels hinzugefügt.

c) Bestimmen Sie die Anzahl der vom Suchverfahren generierten Zuständeund die Länge der Lösungsfolge für verschiedene Startzustände.

Puzzle{board=[2, 5, 1, 6, 7, 0, 3, 4, 8]}

Anz.Zuege: 20: [Puzzle{board=[0, 1, 2, 3, 4, 5, 6, 7, 8]}, Puzzle{board=[3, 1, 2, 0, 4, 5, 6, 7, 8]}, Puzzle{board=[3, 1, 2, 4, 0, 5, 6, 7, 8]}, Puzzle{board=[3, 0, 2, 4, 1, 5, 6, 7, 8]}, Puzzle{board=[3, 2, 0, 4, 1, 5, 6, 7, 8]}, Puzzle{board=[3, 2, 5, 4, 1, 0, 6, 7, 8]}, Puzzle{board=[3, 2, 5, 4, 0, 1, 6, 7, 8]}, Puzzle{board=[3, 2, 5, 4, 7, 1, 6, 0, 8]}, Puzzle{board=[3, 2, 5, 4, 7, 1, 0, 6, 8]}, Puzzle{board=[3, 2, 5, 0, 7, 1, 4, 6, 8]}, Puzzle{board=[0, 2, 5, 3, 7, 1, 4, 6, 8]}, Puzzle{board=[2, 0, 5, 3, 7, 1, 4, 6, 8]}, Puzzle{board=[2, 5, 0, 3, 7, 1, 4, 6, 8]}, Puzzle{board=[2, 5, 1, 3, 7, 0, 4, 6, 8]}, Puzzle{board=[2, 5, 1, 3, 0, 7, 4, 6, 8]}, Puzzle{board=[2, 5, 1, 3, 6, 7, 4, 0, 8]}, Puzzle{board=[2, 5, 1, 3, 6, 7, 0, 4, 8]}, Puzzle{board=[2, 5, 1, 0, 6, 7, 3, 4, 8]}, Puzzle{board=[2, 5, 1, 6, 0, 7, 3, 4, 8]}, Puzzle{board=[2, 5, 1, 6, 7, 0, 3, 4, 8]}]
Anz.Zustände: 796
Anz.Zuege: 20: [Puzzle{board=[2, 5, 1, 6, 7, 0, 3, 4, 8]}, Puzzle{board=[2, 5, 0, 6, 7, 1, 3, 4, 8]}, Puzzle{board=[2, 0, 5, 6, 7, 1, 3, 4, 8]}, Puzzle{board=[2, 7, 5, 6, 0, 1, 3, 4, 8]}, Puzzle{board=[2, 7, 5, 0, 6, 1, 3, 4, 8]}, Puzzle{board=[2, 7, 5, 3, 6, 1, 0, 4, 8]}, Puzzle{board=[2, 7, 5, 3, 6, 1, 4, 0, 8]}, Puzzle{board=[2, 7, 5, 3, 0, 1, 4, 6, 8]}, Puzzle{board=[2, 0, 5, 3, 7, 1, 4, 6, 8]}, Puzzle{board=[0, 2, 5, 3, 7, 1, 4, 6, 8]}, Puzzle{board=[3, 2, 5, 0, 7, 1, 4, 6, 8]}, Puzzle{board=[3, 2, 5, 4, 7, 1, 0, 6, 8]}, Puzzle{board=[3, 2, 5, 4, 7, 1, 6, 0, 8]}, Puzzle{board=[3, 2, 5, 4, 0, 1, 6, 7, 8]}, Puzzle{board=[3, 2, 5, 4, 1, 0, 6, 7, 8]}, Puzzle{board=[3, 2, 0, 4, 1, 5, 6, 7, 8]}, Puzzle{board=[3, 0, 2, 4, 1, 5, 6, 7, 8]}, Puzzle{board=[3, 1, 2, 4, 0, 5, 6, 7, 8]}, Puzzle{board=[3, 1, 2, 0, 4, 5, 6, 7, 8]}, Puzzle{board=[0, 1, 2, 3, 4, 5, 6, 7, 8]}]
Anz.Zustände: 237607

Anz.Zuege: 25: [Puzzle{board=[0, 1, 2, 3, 4, 5, 6, 7, 8]}, Puzzle{board=[3, 1, 2, 0, 4, 5, 6, 7, 8]}, Puzzle{board=[3, 1, 2, 4, 0, 5, 6, 7, 8]}, Puzzle{board=[3, 0, 2, 4, 1, 5, 6, 7, 8]}, Puzzle{board=[3, 2, 0, 4, 1, 5, 6, 7, 8]}, Puzzle{board=[3, 2, 5, 4, 1, 0, 6, 7, 8]}, Puzzle{board=[3, 2, 5, 4, 0, 1, 6, 7, 8]}, Puzzle{board=[3, 2, 5, 0, 4, 1, 6, 7, 8]}, Puzzle{board=[3, 2, 5, 6, 4, 1, 0, 7, 8]}, Puzzle{board=[3, 2, 5, 6, 4, 1, 7, 0, 8]}, Puzzle{board=[3, 2, 5, 6, 4, 1, 7, 8, 0]}, Puzzle{board=[3, 2, 5, 6, 4, 0, 7, 8, 1]}, Puzzle{board=[3, 2, 5, 6, 0, 4, 7, 8, 1]}, Puzzle{board=[3, 2, 5, 0, 6, 4, 7, 8, 1]}, Puzzle{board=[3, 2, 5, 7, 6, 4, 0, 8, 1]}, Puzzle{board=[3, 2, 5, 7, 6, 4, 8, 0, 1]}, Puzzle{board=[3, 2, 5, 7, 0, 4, 8, 6, 1]}, Puzzle{board=[3, 2, 5, 0, 7, 4, 8, 6, 1]}, Puzzle{board=[0, 2, 5, 3, 7, 4, 8, 6, 1]}, Puzzle{board=[2, 0, 5, 3, 7, 4, 8, 6, 1]}, Puzzle{board=[2, 7, 5, 3, 0, 4, 8, 6, 1]}, Puzzle{board=[2, 7, 5, 0, 3, 4, 8, 6, 1]}, Puzzle{board=[2, 7, 5, 8, 3, 4, 0, 6, 1]}, Puzzle{board=[2, 7, 5, 8, 3, 4, 6, 0, 1]}, Puzzle{board=[2, 7, 5, 8, 0, 4, 6, 3, 1]}]
Anz.Zustände: 2893
Anz.Zuege: 25: [Puzzle{board=[2, 7, 5, 8, 0, 4, 6, 3, 1]}, Puzzle{board=[2, 7, 5, 8, 3, 4, 6, 0, 1]}, Puzzle{board=[2, 7, 5, 8, 3, 4, 0, 6, 1]}, Puzzle{board=[2, 7, 5, 0, 3, 4, 8, 6, 1]}, Puzzle{board=[2, 7, 5, 3, 0, 4, 8, 6, 1]}, Puzzle{board=[2, 0, 5, 3, 7, 4, 8, 6, 1]}, Puzzle{board=[0, 2, 5, 3, 7, 4, 8, 6, 1]}, Puzzle{board=[3, 2, 5, 0, 7, 4, 8, 6, 1]}, Puzzle{board=[3, 2, 5, 7, 0, 4, 8, 6, 1]}, Puzzle{board=[3, 2, 5, 7, 6, 4, 8, 0, 1]}, Puzzle{board=[3, 2, 5, 7, 6, 4, 0, 8, 1]}, Puzzle{board=[3, 2, 5, 0, 6, 4, 7, 8, 1]}, Puzzle{board=[3, 2, 5, 6, 0, 4, 7, 8, 1]}, Puzzle{board=[3, 2, 5, 6, 4, 0, 7, 8, 1]}, Puzzle{board=[3, 2, 5, 6, 4, 1, 7, 8, 0]}, Puzzle{board=[3, 2, 5, 6, 4, 1, 7, 0, 8]}, Puzzle{board=[3, 2, 5, 6, 0, 1, 7, 4, 8]}, Puzzle{board=[3, 2, 5, 6, 1, 0, 7, 4, 8]}, Puzzle{board=[3, 2, 0, 6, 1, 5, 7, 4, 8]}, Puzzle{board=[3, 0, 2, 6, 1, 5, 7, 4, 8]}, Puzzle{board=[3, 1, 2, 6, 0, 5, 7, 4, 8]}, Puzzle{board=[3, 1, 2, 6, 4, 5, 7, 0, 8]}, Puzzle{board=[3, 1, 2, 6, 4, 5, 0, 7, 8]}, Puzzle{board=[3, 1, 2, 0, 4, 5, 6, 7, 8]}, Puzzle{board=[0, 1, 2, 3, 4, 5, 6, 7, 8]}]
Anz.Zustände: 3852640

Puzzle{board=[7, 6, 3, 1, 4, 5, 0, 8, 2]}
Anz.Zuege: 23: [Puzzle{board=[0, 1, 2, 3, 4, 5, 6, 7, 8]}, Puzzle{board=[3, 1, 2, 0, 4, 5, 6, 7, 8]}, Puzzle{board=[3, 1, 2, 6, 4, 5, 0, 7, 8]}, Puzzle{board=[3, 1, 2, 6, 4, 5, 7, 0, 8]}, Puzzle{board=[3, 1, 2, 6, 0, 5, 7, 4, 8]}, Puzzle{board=[3, 0, 2, 6, 1, 5, 7, 4, 8]}, Puzzle{board=[0, 3, 2, 6, 1, 5, 7, 4, 8]}, Puzzle{board=[6, 3, 2, 0, 1, 5, 7, 4, 8]}, Puzzle{board=[6, 3, 2, 7, 1, 5, 0, 4, 8]}, Puzzle{board=[6, 3, 2, 7, 1, 5, 4, 0, 8]}, Puzzle{board=[6, 3, 2, 7, 0, 5, 4, 1, 8]}, Puzzle{board=[6, 3, 2, 7, 5, 0, 4, 1, 8]}, Puzzle{board=[6, 3, 0, 7, 5, 2, 4, 1, 8]}, Puzzle{board=[6, 0, 3, 7, 5, 2, 4, 1, 8]}, Puzzle{board=[0, 6, 3, 7, 5, 2, 4, 1, 8]}, Puzzle{board=[7, 6, 3, 0, 5, 2, 4, 1, 8]}, Puzzle{board=[7, 6, 3, 4, 5, 2, 0, 1, 8]}, Puzzle{board=[7, 6, 3, 4, 5, 2, 1, 0, 8]}, Puzzle{board=[7, 6, 3, 4, 5, 2, 1, 8, 0]}, Puzzle{board=[7, 6, 3, 4, 5, 0, 1, 8, 2]}, Puzzle{board=[7, 6, 3, 4, 0, 5, 1, 8, 2]}, Puzzle{board=[7, 6, 3, 0, 4, 5, 1, 8, 2]}, Puzzle{board=[7, 6, 3, 1, 4, 5, 0, 8, 2]}]
Anz.Zustände: 687
Anz.Zuege: 23: [Puzzle{board=[7, 6, 3, 1, 4, 5, 0, 8, 2]}, Puzzle{board=[7, 6, 3, 0, 4, 5, 1, 8, 2]}, Puzzle{board=[0, 6, 3, 7, 4, 5, 1, 8, 2]}, Puzzle{board=[6, 0, 3, 7, 4, 5, 1, 8, 2]}, Puzzle{board=[6, 4, 3, 7, 0, 5, 1, 8, 2]}, Puzzle{board=[6, 4, 3, 7, 5, 0, 1, 8, 2]}, Puzzle{board=[6, 4, 3, 7, 5, 2, 1, 8, 0]}, Puzzle{board=[6, 4, 3, 7, 5, 2, 1, 0, 8]}, Puzzle{board=[6, 4, 3, 7, 5, 2, 0, 1, 8]}, Puzzle{board=[6, 4, 3, 0, 5, 2, 7, 1, 8]}, Puzzle{board=[0, 4, 3, 6, 5, 2, 7, 1, 8]}, Puzzle{board=[4, 0, 3, 6, 5, 2, 7, 1, 8]}, Puzzle{board=[4, 3, 0, 6, 5, 2, 7, 1, 8]}, Puzzle{board=[4, 3, 2, 6, 5, 0, 7, 1, 8]}, Puzzle{board=[4, 3, 2, 6, 0, 5, 7, 1, 8]}, Puzzle{board=[4, 3, 2, 6, 1, 5, 7, 0, 8]}, Puzzle{board=[4, 3, 2, 6, 1, 5, 0, 7, 8]}, Puzzle{board=[4, 3, 2, 0, 1, 5, 6, 7, 8]}, Puzzle{board=[0, 3, 2, 4, 1, 5, 6, 7, 8]}, Puzzle{board=[3, 0, 2, 4, 1, 5, 6, 7, 8]}, Puzzle{board=[3, 1, 2, 4, 0, 5, 6, 7, 8]}, Puzzle{board=[3, 1, 2, 0, 4, 5, 6, 7, 8]}, Puzzle{board=[0, 1, 2, 3, 4, 5, 6, 7, 8]}]
Anz.Zustände: 869523

d) Sind Ihre Zugfolgen optimal?Wenn ja, warum?

    Bei einer monotonen Heuristik haben die von A* expandierten Knoten monoton steigende f-Werte.Damit ist für jeden expandierten Knoten nder gefundene Pfad nach nauch optimal.
    A* ist mit einer monotonen Heuristik auch vollständig, sofern der Verzweigungsfaktor b endlich ist und ein ε> 0 existiert, so dass alle Aktionskosten εüberschritten werden.

e)Welches  Problem könnteentstehen  (nicht  ausprobieren!),  falls  A*  für  die  Lösung  des  15-Puzzle eingesetzt werden würde?

    (3)Laufzeit-und Speicherbedarf sind weiterhin exponentiell. Jedoch hat die Heuristik einen sehr großen Einfluss auf die Komplexität.
    => Laufzeit- und Speicherbedarf nimmt exponentiell zu, da es mehr zustände gibt.